
services:

  grafana:
    image: grafana/grafana:9.5.7
    container_name: grafana
    user: "0"
    ports:
      - 443:3000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - dbdata:/var/lib/grafana
      - /etc/letsencrypt/live/grafana.cygno.cloud.infn.it/fullchain.pem:/var/lib/grafana/openssl/fullchain.pem:ro
      - /etc/letsencrypt/live/grafana.cygno.cloud.infn.it/privkey.pem:/var/lib/grafana/openssl/privkey.pem:ro

    environment:
      GF_INSTALL_PLUGINS: percona-percona-app,michaeldmoore-scatter-panel,natel-plotly-panel,ae3e-plotly-panel,volkovlabs-image-panel,simpod-json-datasource,marcusolsson-json-datasource,yesoreyeram-infinity-datasource
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: 0
      GF_AUTH_ANONYMOUS_ENABLED: 0
      GF_AUTH_BASIC_ENABLED: 0
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN}
      GF_SERVER_PROTOCOL: https
      GF_SERVER_CERT_FILE: /var/lib/grafana/openssl/fullchain.pem #/var/lib/grafana/openssl/grafana.crt
      GF_SERVER_CERT_KEY: /var/lib/grafana/openssl/privkey.pem  #/var/lib/grafana/openssl/grafana.key
      GF_SERVER_ROOT_URL: https://${GF_SERVER_DOMAIN}:443
      GF_SECURITY_COOKIE_SECURE: 'True'
      GF_SECURITY_ALLOW_EMBEDDING: 'True' # https://stackoverflow.com/questions/65847384/embedding-a-website-in-a-grafana-dashboard
      GF_AUTH_GENERIC_OAUTH_ENABLED: 'True'
      GF_AUTH_GENERIC_OAUTH_ALLOW_SIGN_UP: 'True'
      GF_AUTH_OAUTH_ALLOW_INSECURE_EMAIL_LOOKUP: 'True'
      GF_AUTH_GENERIC_OAUTH_TEAM_IDS: ''
      GF_AUTH_GENERIC_OAUTH_ALLOWED_ORGANIZATIONS: ''
      GF_AUTH_GENERIC_OAUTH_NAME: IAM
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: ${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: ${GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET}
      GF_AUTH_GENERIC_OAUTH_SCOPES: address phone openid email profile offline_access
# iam.cloud
#      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://iam.cloud.infn.it/authorize
#      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://iam.cloud.infn.it/token
#      GF_AUTH_GENERIC_OAUTH_API_URL: https://iam.cloud.infn.it/userinfo
# cambare ancghe il seguto pe tornare indietro iam.cloud
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://iam-cygno.cloud.cnaf.infn.it/authorize
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://iam-cygno.cloud.cnaf.infn.it/token
      GF_AUTH_GENERIC_OAUTH_API_URL: https://iam-cygno.cloud.cnaf.infn.it/userinfo

      GF_AUTH_GENERIC_OAUTH_COOKIE_SECURE: 'True'
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: "contains(groups, 'admins/cygno')  && 'Admin' || contains(groups, 'users/cygno') && 'Viewer'"
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_STRICT: 'True'
      GF_PANELS_DISABLE_SANITIZE_HTML: 'True' # https://stackoverflow.com/questions/65847384/embedding-a-website-in-a-grafana-dashboard
#      GF_LOG_LEVEL: debug

#  web:
#     image: nginx:latest
#     container_name: web
#     ports:
#       - "80:80"
#     volumes:
#       - ${PWD}/dev:/usr/share/nginx/html

  tunnel:
    restart: always
    image: gmazzitelli/sshtunnel
    container_name: tunnel_sentinel
#    ports:
#      - 80:80
    environment: 
       REMOTE_PORT: 80
       REMOTE_APP_NAME: localhost
       LOCAL_PORT: 80
       USER: mazzitel
       REMOTE_IP: 90.147.174.164
    volumes:
       - /root/.ssh/daq_id:/root/.ssh/id_rsa 

  tunnel2:
    restart: always
    image: gmazzitelli/sshtunnel
    container_name: tunnel_kafka
#    ports:
#      - 80:80
    environment:
       REMOTE_PORT: 80
       REMOTE_APP_NAME: localhost
       LOCAL_PORT: 80
       USER: mazzitel
       REMOTE_IP: 131.154.98.101
    volumes:
       - /root/.ssh/daq_id:/root/.ssh/id_rsa

  backupper:
    restart: always
    image: gmazzitelli/backupper:v0.1
    container_name: backupper
    environment:
       BCK_START_NAME: 'grafana'
       IAM_CLIENT_ID: ${IAM_CLIENT_ID}
       IAM_CLIENT_SECRET: ${IAM_CLIENT_SECRET}
    volumes:
       - /var/lib/docker/volumes/grafana_dbdata/_data/:/root/data/
       - /tmp/:/tmp/

  tokener:
    image: gmazzitelli/tokener:v0.2
    container_name: tokener
    environment:
      REFRESH_TOKEN: ${REFRESH_TOKEN}
      IAM_CLIENT_SECRET: ${IAM_CLIENT_SECRET}
      IAM_CLIENT_ID: ${IAM_CLIENT_ID}
      IAM_TOKEN_ENDPOINT: ${IAM_TOKEN_ENDPOINT}
      SCOPES: ${SCOPES}

    volumes:
      - /tmp/:/tmp/

    
volumes:
   dbdata:


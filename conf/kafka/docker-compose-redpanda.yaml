version: '2'
services:
  # Redpanda cluster
  redpanda-1:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.5
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
      - --set redpanda.kafka_batch_max_bytes=31457280
      - --set redpanda.kafka_request_max_bytes=31457280
#    environment:
#####      KAFKA_REPLICA_FETCH_MAX_BYTES: 31457280 / 15728640
#      KAFKA_PRODUCER_MAX_REQUEST_SIZE: 31457280
#      KAFKA_CONSUMER_MAX_PARTITION_FETCH_BYTES: 31457280
#      KAFKA_MESSAGE_MAX_BYTES: 31457280
#      CONNECT_PRODUCER_MAX_REQUEST_SIZE: 31457280
#      CONNECT_CONSUMER_MAX_PARTITION_FETCH_BYTES: 31457280
#      KAFKA_LOG_RETENTION_HOURS: 1
#      KAFKA_LOG_RETENTION_BYTES: 1073741824
##      KAFKA_TOPIC_MAX_MESSAGE_BYTES: 31457280
##      KAFKA_REPLICA_FETCH_MAX_BYTES: 31457280
##      KAFKA_LOG_RETENTION_BYTES: 1048576
    ports:
      # - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
  sentinel:
    image: gmazzitelli/cygno-st:v1.0.4-cygno
    container_name: sentinel
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    environment:
      OIDC_AGENT: ${OIDC_AGENT}
      REFRESH_TOKEN: ${REFRESH_TOKEN}
      IAM_CLIENT_SECRET: ${IAM_CLIENT_SECRET}
      IAM_CLIENT_ID: ${IAM_CLIENT_ID}
      IAM_SERVER: ${IAM_SERVER}
      IAM_SCOPES: "'openid profile email offline_access wlcg wlcg.groups'"
    volumes:
      - ${PWD}/dev/:/root/dev
      - ${PWD}/start_script.sh:/root/start_script.sh
      - /tmp/:/tmp/
    command: /bin/sh -c "/root/start_script.sh && tail -f /dev/null"
#    command: /bin/sh -c "echo \"source /root/start_script.sh\" >> /root/.bashrc && tail -f /dev/null"

  editor:
    image: jupyter/minimal-notebook
    container_name: editor
    user: root
    volumes:
      - ${PWD}/dev:/home/jovyan/work/
    ports:
      - "8890:8888"

  web:
     image: nginx:latest
     ports:
       - "80:80"
     volumes:
       - ${PWD}/dev:/usr/share/nginx/html
